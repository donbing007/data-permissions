package com.xforceplus.ultraman.permissions.repository;

import com.xforceplus.ultraman.permissions.repository.entity.DataScope;
import com.xforceplus.ultraman.permissions.repository.entity.DataScopeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface DataScopeRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @SelectProvider(type=DataScopeSqlProvider.class, method="countByExample")
    long countByExample(DataScopeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @DeleteProvider(type=DataScopeSqlProvider.class, method="deleteByExample")
    int deleteByExample(DataScopeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @Delete({
        "delete from data_scope",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @Insert({
        "insert into data_scope (`role`, tenant, ",
        "entity)",
        "values (#{role,jdbcType=VARCHAR}, #{tenant,jdbcType=VARCHAR}, ",
        "#{entity,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(DataScope record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @InsertProvider(type=DataScopeSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(DataScope record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @SelectProvider(type=DataScopeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column = "role", property = "role", jdbcType = JdbcType.VARCHAR),
        @Result(column = "tenant", property = "tenant", jdbcType = JdbcType.VARCHAR),
        @Result(column="entity", property="entity", jdbcType=JdbcType.VARCHAR)
    })
    List<DataScope> selectByExample(DataScopeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, `role`, tenant, entity",
        "from data_scope",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column = "role", property = "role", jdbcType = JdbcType.VARCHAR),
        @Result(column = "tenant", property = "tenant", jdbcType = JdbcType.VARCHAR),
        @Result(column="entity", property="entity", jdbcType=JdbcType.VARCHAR)
    })
    DataScope selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DataScopeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") DataScope record, @Param("example") DataScopeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DataScopeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") DataScope record, @Param("example") DataScopeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @UpdateProvider(type=DataScopeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DataScope record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_scope
     *
     * @mbg.generated
     */
    @Update({
        "update data_scope",
        "set `role` = #{role,jdbcType=VARCHAR},",
        "tenant = #{tenant,jdbcType=VARCHAR},",
        "entity = #{entity,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(DataScope record);
}